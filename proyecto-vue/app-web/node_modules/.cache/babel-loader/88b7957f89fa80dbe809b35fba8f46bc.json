{"ast":null,"code":"// Constants and variables\nconst dropArea = document.querySelector(\".drop-area\");\nconst dragText = dropArea.querySelector('h2');\nconst button = dropArea.querySelector('button');\nconst input = dropArea.querySelector(\"#input-file\");\nlet files; // 'Click' event\n\nbutton.addEventListener(\"click\", () => {\n  // Parámetro \"e\" borrado\n  try {\n    // Bloque \"try\"\n    input.click();\n  } catch (error) {\n    // Catch\n    console.log(error);\n  }\n}); // 'Change' event\n\ninput.addEventListener(\"change\", () => {\n  // Parámetro \"e\" borrado\n  try {\n    // Bloque \"try\"\n    files = input.files;\n    dropArea.classList.add(\"active\");\n    showFiles(files);\n    dropArea.classList.remove(\"active\");\n  } catch (error) {\n    // Catch\n    console.log(error);\n  }\n}); // 'Dragover' event\n\ndropArea.addEventListener(\"dragover\", event => {\n  // Cambié \"e\" por \"event\"\n  try {\n    // Bloque \"try\"\n    event.preventDefault();\n    dropArea.classList.add(\"active\");\n    dragText.textContent = \"Suelta para subir los archivos\";\n  } catch (error) {\n    // Catch\n    console.log(error);\n  }\n}); // 'Dragleave' event\n\ndropArea.addEventListener(\"dragleave\", event => {\n  // Cambié \"e\" por \"event\"\n  try {\n    event.preventDefault();\n    dropArea.classList.remove(\"active\");\n    dragText.textContent = \"Arrastra y suelta los archivos\";\n  } catch (error) {\n    console.log(error);\n  }\n}); // 'Drop' event\n\ndropArea.addEventListener(\"drop\", event => {\n  // Cambié \"e\" por \"event\"\n  try {\n    // Bloque \"try\"\n    event.preventDefault();\n    files = event.dataTransfer.files;\n    showFiles(files);\n    dropArea.classList.add(\"active\");\n    dragText.textContent = \"Drop your files here\";\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nfunction showFiles(files) {\n  if (files.length == undefined) {\n    // Error arreglado, asignación cambiada a booleano\n    processFile(files);\n  } else {\n    for (const file of files) {\n      processFile(file);\n    }\n  }\n}\n\nfunction processFile(file) {\n  const docType = file.type;\n  const validExtensions = [\"image/png\"];\n\n  if (validExtensions.includes(docType)) {\n    //archivo válido\n    const fileReader = new FileReader();\n    const id = `file-${Math.random().toString(32).substring(7)}`;\n    fileReader.addEventListener('load', () => {\n      const fileUrl = fileReader.result;\n      const image = `\n                    <div id=\"${id}\" class=\"file-container\">\n                        <img src=\"${fileUrl}\" alt=\"${file.name}\" width=\"50\">\n                        <div class=\"status\">\n                            <span>${file.name}</span>\n                            <span class=\"status-text\">\n                                    Loading...\n                                </span>\n                        </div>\n                    </div>\n                `;\n      const html = document.querySelector('#preview').innerHTML;\n      document.querySelector('#preview').innerHTML = image + html;\n    });\n    fileReader.readAsDataURL(file);\n    uploadFile(file, id);\n  } else {\n    //no es un archivo válido\n    alert('No es un archivo válido');\n  }\n}\n\nasync function uploadFile(file, id) {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n\n  try {\n    const response = await fetch('http://localhost:3000/upload', {\n      method: \"POST\",\n      body: formData\n    });\n    /* eslint-disable no-unused-vars */\n\n    const responseText = await response.text();\n    /* eslint-enable no-unused-vars */\n\n    document.querySelector(`#${id} .status-text`).innerHTML = `<span class=\"success\">Archivo subido correctamente..</span>`;\n  } catch (error) {\n    document.querySelector(`#${id} .status-text`).innerHTML = `<span class=\"success\">El archivo no pudo subirse..</span>`;\n  }\n}\n\nexport default {\n  name: 'app_section_1'\n};","map":{"version":3,"mappings":"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","names":["dropArea","document","querySelector","dragText","button","input","files","addEventListener","click","error","console","log","classList","add","showFiles","remove","event","preventDefault","textContent","dataTransfer","length","undefined","processFile","file","docType","type","validExtensions","includes","fileReader","FileReader","id","Math","random","toString","substring","fileUrl","result","image","name","html","innerHTML","readAsDataURL","uploadFile","alert","formData","FormData","append","response","fetch","method","body","responseText","text"],"sourceRoot":"","sources":["C:\\Users\\pc\\Desktop\\ALEJANDRA\\Codo a Codo\\22516 Full Stack-Python\\TPO\\Proyecto Bioinformatica\\proyecto-app-web\\proyecto-vue\\app-web\\src\\components\\app_section_1.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"app_section_1\">\r\n    <section id=\"section-1\">\r\n        <h2>Carga de archivos </h2>\r\n        <div class=\"drop-area\">             \r\n            <h2>Arrastre y suelte archivos</h2>\r\n            <span>O</span>\r\n            <button>Seleccione sus archivos</button>\r\n            <input type=\"file\" accept=\"text/*,.afa\" name=\"\" id=\"input-file\" hidden multiple>\r\n        </div>\r\n        <div id=\"preview\"></div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    // Constants and variables\r\n    const dropArea = document.querySelector(\".drop-area\");\r\n    const dragText = dropArea.querySelector('h2');\r\n    const button = dropArea.querySelector('button');\r\n    const input = dropArea.querySelector(\"#input-file\");\r\n    let files;\r\n\r\n    // 'Click' event\r\n    button.addEventListener(\"click\", () => { // Parámetro \"e\" borrado\r\n        try {                                // Bloque \"try\"\r\n            input.click();\r\n        }\r\n        catch(error) {                       // Catch\r\n            console.log(error);\r\n        }\r\n        \r\n    });\r\n\r\n    // 'Change' event\r\n    input.addEventListener(\"change\", () => {        // Parámetro \"e\" borrado\r\n        try {                                       // Bloque \"try\"\r\n            files = input.files;\r\n            dropArea.classList.add(\"active\");\r\n            showFiles(files);\r\n            dropArea.classList.remove(\"active\");\r\n        }\r\n        catch(error) {                              // Catch\r\n            console.log(error);\r\n        }\r\n    });\r\n\r\n    // 'Dragover' event\r\n    dropArea.addEventListener(\"dragover\", (event) => {  // Cambié \"e\" por \"event\"\r\n        try {                                           // Bloque \"try\"\r\n            event.preventDefault();\r\n            dropArea.classList.add(\"active\");\r\n            dragText.textContent = \"Suelta para subir los archivos\";\r\n        }\r\n        catch (error) {                                 // Catch\r\n            console.log(error);\r\n        }\r\n    });\r\n\r\n    // 'Dragleave' event\r\n    dropArea.addEventListener(\"dragleave\", (event) => { // Cambié \"e\" por \"event\"\r\n        try {\r\n            event.preventDefault();\r\n            dropArea.classList.remove(\"active\");\r\n            dragText.textContent = \"Arrastra y suelta los archivos\";\r\n        }\r\n        catch(error) {\r\n            console.log(error);\r\n        }\r\n    });\r\n\r\n    // 'Drop' event\r\n    dropArea.addEventListener(\"drop\" , (event) => { // Cambié \"e\" por \"event\"\r\n        try {                                       // Bloque \"try\"\r\n            event.preventDefault();\r\n            files = event.dataTransfer.files;\r\n            showFiles(files);\r\n            dropArea.classList.add(\"active\");\r\n            dragText.textContent = \"Drop your files here\";\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    });\r\n\r\n\r\n    function showFiles(files) {\r\n        if (files.length == undefined) {        // Error arreglado, asignación cambiada a booleano\r\n            processFile(files);\r\n        } else {\r\n            for(const file of files){\r\n                processFile(file);\r\n            }\r\n        }\r\n    }\r\n\r\n    function processFile(file){\r\n        const docType = file.type;\r\n        const validExtensions = [\"image/png\"];\r\n\r\n        if(validExtensions.includes(docType)){\r\n            //archivo válido\r\n            const fileReader = new FileReader();\r\n            const id = `file-${Math.random().toString(32).substring(7)}`;\r\n\r\n            fileReader.addEventListener('load', () => {\r\n                const fileUrl = fileReader.result;\r\n                const image = `\r\n                    <div id=\"${id}\" class=\"file-container\">\r\n                        <img src=\"${fileUrl}\" alt=\"${file.name}\" width=\"50\">\r\n                        <div class=\"status\">\r\n                            <span>${file.name}</span>\r\n                            <span class=\"status-text\">\r\n                                    Loading...\r\n                                </span>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n\r\n                const html = document.querySelector('#preview').innerHTML;\r\n                document.querySelector('#preview').innerHTML = image + html;\r\n        });\r\n\r\n        fileReader.readAsDataURL(file);\r\n        uploadFile(file, id);\r\n        } else{\r\n            //no es un archivo válido\r\n            alert('No es un archivo válido');\r\n\r\n        \r\n        }\r\n    }\r\n\r\n    async function uploadFile(file, id){\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:3000/upload',{\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            /* eslint-disable no-unused-vars */\r\n            const responseText = await response.text();\r\n            /* eslint-enable no-unused-vars */\r\n\r\n            document.querySelector(`#${id} .status-text`).innerHTML = `<span class=\"success\">Archivo subido correctamente..</span>`\r\n        } catch (error) {\r\n            document.querySelector(`#${id} .status-text`).innerHTML = `<span class=\"success\">El archivo no pudo subirse..</span>`\r\n        }\r\n\r\n    }\r\n\r\n    export default {\r\n        name: 'app_section_1'\r\n    }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}