{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app_section_1\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"section\", {\n  id: \"section-1\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Carga de archivos \"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"drop-area\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Arrastre y suelte archivos\"), /*#__PURE__*/_createElementVNode(\"span\", null, \"O\"), /*#__PURE__*/_createElementVNode(\"button\", null, \"Seleccione sus archivos\"), /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"file\",\n  accept: \"text/*,.afa\",\n  name: \"\",\n  id: \"input-file\",\n  hidden: \"\",\n  multiple: \"\"\n})]), /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"preview\"\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"mappings":";;EAEOA,KAAK,EAAC;;;gCACTC,oBASU,SATV,EASU;EATDC,EAAE,EAAC;AASF,CATV,EAAuB,cACnBD,oBAA2B,IAA3B,EAA2B,IAA3B,EAAI,oBAAJ,CADmB,eAEnBA,oBAKM,KALN,EAKM;EALDD,KAAK,EAAC;AAKL,CALN,EAAsB,cAClBC,oBAAmC,IAAnC,EAAmC,IAAnC,EAAI,4BAAJ,CADkB,eAElBA,oBAAc,MAAd,EAAc,IAAd,EAAM,GAAN,CAFkB,eAGlBA,oBAAwC,QAAxC,EAAwC,IAAxC,EAAQ,yBAAR,CAHkB,eAIlBA,oBAAgF,OAAhF,EAAgF;EAAzEE,IAAI,EAAC,MAAoE;EAA7DC,MAAM,EAAC,aAAsD;EAAxCC,IAAI,EAAC,EAAmC;EAAhCH,EAAE,EAAC,YAA6B;EAAhBI,MAAM,EAAN,EAAgB;EAATC,QAAQ,EAAR;AAAS,CAAhF,CAJkB,CAAtB,CAFmB,eAQnBN,oBAAwB,KAAxB,EAAwB;EAAnBC,EAAE,EAAC;AAAgB,CAAxB,CARmB,CAAvB;;AAAA;;oBAAAM;;uBADFC,oBAWM,KAXN,cAWMC,UAXN","names":["class","_createElementVNode","id","type","accept","name","hidden","multiple","_hoisted_2","_createElementBlock","_hoisted_3"],"sourceRoot":"","sources":["C:\\Users\\pc\\Desktop\\ALEJANDRA\\Codo a Codo\\22516 Full Stack-Python\\TPO\\Proyecto Bioinformatica\\proyecto-app-web\\proyecto-vue\\app-web\\src\\components\\app_section_1.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"app_section_1\">\r\n    <section id=\"section-1\">\r\n        <h2>Carga de archivos </h2>\r\n        <div class=\"drop-area\">             \r\n            <h2>Arrastre y suelte archivos</h2>\r\n            <span>O</span>\r\n            <button>Seleccione sus archivos</button>\r\n            <input type=\"file\" accept=\"text/*,.afa\" name=\"\" id=\"input-file\" hidden multiple>\r\n        </div>\r\n        <div id=\"preview\"></div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    // Constants and variables\r\n    const dropArea = document.querySelector(\".drop-area\");\r\n    const dragText = dropArea.querySelector('h2');\r\n    const button = dropArea.querySelector('button');\r\n    const input = dropArea.querySelector(\"#input-file\");\r\n    let files;\r\n\r\n    // 'Click' event\r\n    button.addEventListener(\"click\", () => { // Parámetro \"e\" borrado\r\n        try {                                // Bloque \"try\"\r\n            input.click();\r\n        }\r\n        catch(error) {                       // Catch\r\n            console.log(error);\r\n        }\r\n        \r\n    });\r\n\r\n    // 'Change' event\r\n    input.addEventListener(\"change\", () => {        // Parámetro \"e\" borrado\r\n        try {                                       // Bloque \"try\"\r\n            files = input.files;\r\n            dropArea.classList.add(\"active\");\r\n            showFiles(files);\r\n            dropArea.classList.remove(\"active\");\r\n        }\r\n        catch(error) {                              // Catch\r\n            console.log(error);\r\n        }\r\n    });\r\n\r\n    // 'Dragover' event\r\n    dropArea.addEventListener(\"dragover\", (event) => {  // Cambié \"e\" por \"event\"\r\n        try {                                           // Bloque \"try\"\r\n            event.preventDefault();\r\n            dropArea.classList.add(\"active\");\r\n            dragText.textContent = \"Suelta para subir los archivos\";\r\n        }\r\n        catch (error) {                                 // Catch\r\n            console.log(error);\r\n        }\r\n    });\r\n\r\n    // 'Dragleave' event\r\n    dropArea.addEventListener(\"dragleave\", (event) => { // Cambié \"e\" por \"event\"\r\n        try {\r\n            event.preventDefault();\r\n            dropArea.classList.remove(\"active\");\r\n            dragText.textContent = \"Arrastra y suelta los archivos\";\r\n        }\r\n        catch(error) {\r\n            console.log(error);\r\n        }\r\n    });\r\n\r\n    // 'Drop' event\r\n    dropArea.addEventListener(\"drop\" , (event) => { // Cambié \"e\" por \"event\"\r\n        try {                                       // Bloque \"try\"\r\n            event.preventDefault();\r\n            files = event.dataTransfer.files;\r\n            showFiles(files);\r\n            dropArea.classList.add(\"active\");\r\n            dragText.textContent = \"Drop your files here\";\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    });\r\n\r\n\r\n    function showFiles(files) {\r\n        if (files.length == undefined) {        // Error arreglado, asignación cambiada a booleano\r\n            processFile(files);\r\n        } else {\r\n            for(const file of files){\r\n                processFile(file);\r\n            }\r\n        }\r\n    }\r\n\r\n    function processFile(file){\r\n        const docType = file.type;\r\n        const validExtensions = [\"image/png\"];\r\n\r\n        if(validExtensions.includes(docType)){\r\n            //archivo válido\r\n            const fileReader = new FileReader();\r\n            const id = `file-${Math.random().toString(32).substring(7)}`;\r\n\r\n            fileReader.addEventListener('load', () => {\r\n                const fileUrl = fileReader.result;\r\n                const image = `\r\n                    <div id=\"${id}\" class=\"file-container\">\r\n                        <img src=\"${fileUrl}\" alt=\"${file.name}\" width=\"50\">\r\n                        <div class=\"status\">\r\n                            <span>${file.name}</span>\r\n                            <span class=\"status-text\">\r\n                                    Loading...\r\n                                </span>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n\r\n                const html = document.querySelector('#preview').innerHTML;\r\n                document.querySelector('#preview').innerHTML = image + html;\r\n        });\r\n\r\n        fileReader.readAsDataURL(file);\r\n        uploadFile(file, id);\r\n        } else{\r\n            //no es un archivo válido\r\n            alert('No es un archivo válido');\r\n\r\n        \r\n        }\r\n    }\r\n\r\n    async function uploadFile(file, id){\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:3000/upload',{\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            /* eslint-disable no-unused-vars */\r\n            const responseText = await response.text();\r\n            /* eslint-enable no-unused-vars */\r\n\r\n            document.querySelector(`#${id} .status-text`).innerHTML = `<span class=\"success\">Archivo subido correctamente..</span>`\r\n        } catch (error) {\r\n            document.querySelector(`#${id} .status-text`).innerHTML = `<span class=\"success\">El archivo no pudo subirse..</span>`\r\n        }\r\n\r\n    }\r\n\r\n    export default {\r\n        name: 'app_section_1'\r\n    }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}